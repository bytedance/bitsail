name: CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'website/**'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
      - 'package.json'
      - 'yarn.lock'
      - 'tools/release'

  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'website/**'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
      - 'package.json'
      - 'yarn.lock'
      - 'tools/release'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "license-rc"
  license-rc:
    name: License header
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Check License Header
        uses: apache/skywalking-eyes/header@main

  # This workflow compile the project on Windows without running any test
  compile:
    name: Compile
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        engine: [ flink-1.11 ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: git config --global core.longpaths true
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64
          cache: 'maven'
      - name: Compile
        run:
          mvn clean verify -pl bitsail-dist -am -DskipUT=true -DskipITCase=true -P"${{ matrix.engine }}"

  # This workflow contains a single job called "unit-test"
  unit-test:
    name: Unit Test
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        engine: [ flink-1.11 ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: git config --global core.longpaths true
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64
          cache: 'maven'

      - name: Maven Verify Unit Test
        run:
          mvn clean verify -pl bitsail-dist -am -DskipUT=false -DskipITCase=true -P${{ matrix.engine }}

    # This workflow contains a single job called "integration-tests"
  integration-tests:
    name: Integration Test
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        engine: [ flink-1.11 ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: git config --global core.longpaths true
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64
          cache: 'maven'
      - name: Maven Verify Integration Test
        run: |
          all_integration_test_modules=`python tools/test/list-test-modules.py integration`
          mvn clean verify -pl $all_integration_test_modules -DskipUT=true -DskipITCase=false -DskipE2E=true -D"checkstyle.skip"=true -am -P${{ matrix.engine }}

    # This workflow contains a single job called "integration-tests"
  end-to-end-tests:
    name: End-to-End Test
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        engine: [ flink-1.11 ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: git config --global core.longpaths true
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64
          cache: 'maven'

      - name: Maven Verify End-to-End Test
        run: |
          all_e2e_test_modules=`python tools/test/list-test-modules.py e2e`
          mvn clean verify -pl $all_e2e_test_modules -DskipUT=true -DskipITCase=true -DskipE2E=false -D"checkstyle.skip"=true -am -P${{ matrix.engine }}
