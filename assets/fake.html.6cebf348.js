import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as o,a,b as t,d as s,w as e,e as p,r as c}from"./app.a6ab98b3.js";const d={},r=a("h1",{id:"fake连接器",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#fake连接器","aria-hidden":"true"},"#"),t(" Fake连接器")],-1),u=p(`<p><em><strong>BitSail</strong></em> Fake是一个读连接器，你指定一些列的name、type后，Fake连接器会为你生成指定数量的数据行；他是功能测试的好帮手，通常也是BitSail新手的HelloWorld程序的读连接器。</p><h2 id="依赖引入" tabindex="-1"><a class="header-anchor" href="#依赖引入" aria-hidden="true">#</a> 依赖引入</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bytedance.bitsail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>bitsail-connector-fake<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${revision}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fake读取" tabindex="-1"><a class="header-anchor" href="#fake读取" aria-hidden="true">#</a> Fake读取</h2><h3 id="支持数据类型" tabindex="-1"><a class="header-anchor" href="#支持数据类型" aria-hidden="true">#</a> 支持数据类型</h3><ul><li>基本类型: <ul><li>整数类型: <ul><li>short</li><li>int</li><li>long</li><li>biginteger</li></ul></li><li>浮点类型:: <ul><li>float</li><li>double</li><li>bigdecimal</li></ul></li><li>时间类型: <ul><li>time</li><li>timestamp</li><li>date</li><li>date.date</li><li>date.time</li><li>date.datetime</li></ul></li><li>字符类型: <ul><li>string</li></ul></li><li>布尔类型: <ul><li>不支持</li></ul></li><li>二进制类型: <ul><li>binary</li><li>bytes</li></ul></li></ul></li></ul><h3 id="主要参数" tabindex="-1"><a class="header-anchor" href="#主要参数" aria-hidden="true">#</a> 主要参数</h3><p>写连接器参数在<code>job.reader</code>中配置，实际使用时请注意路径前缀。示例:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;reader&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.bytedance.bitsail.connector.legacy.fake.source.FakeSource&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;total_count&quot;</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
      <span class="token property">&quot;rate&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      <span class="token property">&quot;random_null_rate&quot;</span><span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;columns&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;int&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="必需参数" tabindex="-1"><a class="header-anchor" href="#必需参数" aria-hidden="true">#</a> 必需参数</h4><table><thead><tr><th style="text-align:left;">参数名称</th><th style="text-align:left;">是否必填</th><th style="text-align:left;">参数枚举值</th><th style="text-align:left;">参数含义</th></tr></thead><tbody><tr><td style="text-align:left;">class</td><td style="text-align:left;">是</td><td style="text-align:left;"></td><td style="text-align:left;">Fake读连接器类型, <code>com.bytedance.bitsail.connector.legacy.fake.source.FakeSource</code></td></tr><tr><td style="text-align:left;">total_count</td><td style="text-align:left;">是</td><td style="text-align:left;"></td><td style="text-align:left;">生成数据的总条数</td></tr></tbody></table><h4 id="可选参数" tabindex="-1"><a class="header-anchor" href="#可选参数" aria-hidden="true">#</a> 可选参数</h4><table><thead><tr><th style="text-align:left;">参数名称</th><th style="text-align:left;">是否必填</th><th style="text-align:left;">参数枚举值</th><th style="text-align:left;">参数含义</th></tr></thead><tbody><tr><td style="text-align:left;">rate</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">产生数据的频率,数值越大，单位时间生成的数据越多</td></tr><tr><td style="text-align:left;">lower_limit</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">与upper_limit一起作为生成 float,double,bigdecimal 类型字段的种子,并非字段值的边界</td></tr><tr><td style="text-align:left;">upper_limit</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">与lower_limit一起作为生成 float,double,bigdecimal 类型字段的种子,并非字段值的边界</td></tr><tr><td style="text-align:left;">from_timestamp</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">与 to_timestamp 一起作为生成时间类型字段的种子,并非字段值的边界</td></tr><tr><td style="text-align:left;">to_timestamp</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">与 from_timestamp 一起作为生成时间类型字段的种子,并非字段值的边界</td></tr></tbody></table><h2 id="相关文档" tabindex="-1"><a class="header-anchor" href="#相关文档" aria-hidden="true">#</a> 相关文档</h2>`,14);function k(g,m){const n=c("RouterLink");return i(),o("div",null,[r,a("p",null,[t("上级文档: "),s(n,{to:"/zh/documents/connectors/"},{default:e(()=>[t("connectors")]),_:1})]),u,a("p",null,[t("配置示例文档: "),s(n,{to:"/zh/documents/connectors/fake/fake-example.html"},{default:e(()=>[t("fake-connector-example")]),_:1})])])}const b=l(d,[["render",k],["__file","fake.html.vue"]]);export{b as default};
