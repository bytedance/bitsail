import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as p,a as e,b as t,d as n,w as s,f as c,e as l,r}from"./app.e5d47935.js";const d={},u=e("h1",{id:"clickhouse-connector",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#clickhouse-connector","aria-hidden":"true"},"#"),t(" ClickHouse connector")],-1),h=l(`<p><strong>BitSail</strong> ClickHouse connector can be used to read data in ClickHouse, mainly supports the following functions:</p><ul><li>Support batch reading of ClickHouse tables</li><li>JDBC Driver version: 0.3.2-patch11</li></ul><h2 id="maven-dependency" tabindex="-1"><a class="header-anchor" href="#maven-dependency" aria-hidden="true">#</a> Maven dependency</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bytedance.bitsail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>connector-clickhouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${revision}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clickhouse-reader" tabindex="-1"><a class="header-anchor" href="#clickhouse-reader" aria-hidden="true">#</a> ClickHouse reader</h2><h3 id="supported-data-types" tabindex="-1"><a class="header-anchor" href="#supported-data-types" aria-hidden="true">#</a> Supported data types</h3><p>The following basic data types are supported:</p><ul><li>Int8</li><li>Int16</li><li>Int32</li><li>Int64</li><li>UInt8</li><li>UInt16</li><li>UInt32</li><li>UInt64</li><li>Float32</li><li>Float64</li><li>Decimal</li><li>Date</li><li>String</li></ul><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3><p>Read connector parameters are configured in <code>job.reader</code>, please pay attention to the path prefix when actually using it. Example of parameter configuration:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;reader&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.bytedance.bitsail.connector.clickhouse.source.ClickhouseSource&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;jdbc_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jdbc:clickhouse://127.0.0.1:8123&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;user_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1234567&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;db_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;table_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test_ch_table&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;split_field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;split_config&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;lower_bound\\&quot;: 0, \\&quot;upper_bound\\&quot;: 10000, \\&quot;split_num\\&quot;: 3}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sql_filter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;( id % 2 == 0 )&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="required-parameters" tabindex="-1"><a class="header-anchor" href="#required-parameters" aria-hidden="true">#</a> Required parameters</h4><table><thead><tr><th style="text-align:left;">Parameter name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">class</td><td style="text-align:left;">yes</td><td style="text-align:left;"><code>com.bytedance.bitsail.connector.clickhouse.source.ClickhouseSource</code></td><td style="text-align:left;">ClickHouse read connector type</td></tr><tr><td style="text-align:left;">jdbc_url</td><td style="text-align:left;">yes</td><td style="text-align:left;"></td><td style="text-align:left;">JDBC connection address of ClickHouse</td></tr><tr><td style="text-align:left;">db_name</td><td style="text-align:left;">yes</td><td style="text-align:left;"></td><td style="text-align:left;">ClickHouse library to read</td></tr><tr><td style="text-align:left;">table_name</td><td style="text-align:left;">yes</td><td style="text-align:left;"></td><td style="text-align:left;">ClickHouse table to read</td></tr></tbody></table>`,13),g=l('<h4 id="optional-parameters" tabindex="-1"><a class="header-anchor" href="#optional-parameters" aria-hidden="true">#</a> Optional parameters</h4><table><thead><tr><th style="text-align:left;">Parameter name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">user_name</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">Username to access ClickHouse services</td></tr><tr><td style="text-align:left;">password</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">The password of the above user</td></tr><tr><td style="text-align:left;">split_field</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">Batch query fields, only support Int8 - Int64 and UInt8 - UInt32 integer types</td></tr><tr><td style="text-align:left;">split_config</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">The configuration for batch query according to <code>split_field</code> field, including initial value, maximum value and query times, <p></p> For example: <code>{&quot;lower_bound&quot;: 0, &quot;upper_bound&quot;: 10000, &quot;split_num&quot;: 3}</code></td></tr><tr><td style="text-align:left;">sql_filter</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">The filter condition of the query, such as <code>( id % 2 == 0 )</code>, will be spliced into the WHERE clause of the query SQL</td></tr><tr><td style="text-align:left;">reader_parallelism_num</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">ClickHouse reader parallelism num</td></tr></tbody></table><h2 id="related-documents" tabindex="-1"><a class="header-anchor" href="#related-documents" aria-hidden="true">#</a> Related documents</h2>',3);function k(f,m){const a=r("RouterLink");return i(),p("div",null,[u,e("p",null,[t("Parent document: "),n(a,{to:"/en/documents/connectors/"},{default:s(()=>[t("Connectors")]),_:1})]),h,c("AGGREGATE<br/>DUPLICATE"),g,e("p",null,[t("Configuration example: "),n(a,{to:"/en/documents/connectors/clickhouse/clickhouse-example.html"},{default:s(()=>[t("ClickHouse connector example")]),_:1})])])}const b=o(d,[["render",k],["__file","clickhouse.html.vue"]]);export{b as default};
