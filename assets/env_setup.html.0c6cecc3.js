import{_ as l}from"./change-hive-version.6df1e05b.js";import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as d,a as e,b as n,d as a,w as u,e as i,r as t}from"./app.a52a4427.js";const p={},h=e("h1",{id:"develop-environment-setup",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#develop-environment-setup","aria-hidden":"true"},"#"),n(" Develop Environment Setup")],-1),m=e("hr",null,null,-1),b=e("h2",{id:"prerequisite",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisite","aria-hidden":"true"},"#"),n(" Prerequisite")],-1),v=e("p",null,[e("strong",null,"Bitsail"),n(" supports run integration tests on local IDE. To achieve that, you need:")],-1),k=e("li",null,"JDK1.8",-1),f=e("li",null,"maven 3.6+",-1),_={href:"https://www.docker.com/products/docker-desktop/",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,"After correctly installing the above required components, we are able to run integration tests on your local IDE.",-1),x=e("h2",{id:"build-from-source-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#build-from-source-code","aria-hidden":"true"},"#"),n(" Build From Source Code")],-1),y=e("h3",{id:"change-hive-version",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#change-hive-version","aria-hidden":"true"},"#"),n(" Change Hive Version")],-1),w=e("strong",null,"3.1.0",-1),j=e("code",null,"hive.version",-1),S={href:"https://github.com/bytedance/bitsail/blob/master/bitsail-shade/bitsail-shaded-hive/pom.xml",target:"_blank",rel:"noopener noreferrer"},C=i('<p><img src="'+l+`" alt="" loading="lazy"></p><h3 id="package-structure" tabindex="-1"><a class="header-anchor" href="#package-structure" aria-hidden="true">#</a> Package &amp; Structure</h3><ul><li>Run the build script to package with flink embedded. <code>bash build.sh</code> If you have your own flink package provided by the cluster, you can also package without flink. <code>mvn clean package -pl bitsail-dist -am -Dmaven.test.skip=true</code></li></ul><p>After building the project, the output jar files are in the folder <code>bitsail-dist/target/</code>.</p><p>The project production file structure is as follows:</p><div class="language-simple line-numbers-mode" data-ext="simple"><pre class="language-simple"><code>bitsail-archive-\${version}-SNAPSHOT    
    /bin  
        /bitsail #Startup script
    /conf
        /bitsail.conf #bitsail system config
    /embedded
        /flink #embedded flink
    /examples #examples configuration files
        /example-datas #examples data
        /Fake_xx_Example.json #Fake source to xx examples config files
        /xx_Print_Example.json #xx to print sink examples config files
    /libs #jar libs
        /bitsail-core.jar #entering jar package
        /connectors #connector plugin jars
            /mapping #connector plugin config files
        /components #components jars，such as metric、dirty-collector
        /clients #bitsail client jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="run-local-integration-tests" tabindex="-1"><a class="header-anchor" href="#run-local-integration-tests" aria-hidden="true">#</a> Run Local Integration Tests</h2>`,7),E={href:"https://github.com/bytedance/bitsail/tree/master/bitsail-test/bitsail-test-integration",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"bitsail-test-integration",-1),B={href:"https://github.com/bytedance/bitsail/blob/master/bitsail-test/bitsail-test-integration/bitsail-test-integration-base/src/main/java/com/bytedance/bitsail/test/integration/engine/flink/Flink11Engine.java",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/bytedance/bitsail/blob/master/bitsail-test/bitsail-test-integration/bitsail-test-integration-connector-legacy/bitsail-test-integration-kafka-legacy/src/test/java/com/bytedance/bitsail/test/integration/legacy/KafkaSourceITCase.java",target:"_blank",rel:"noopener noreferrer"},F={href:"https://www.testcontainers.org/modules/kafka/",target:"_blank",rel:"noopener noreferrer"},K=e("code",null,"testKafkaSource",-1),q=i(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KafkaSourceITCase</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>

  <span class="token annotation punctuation">@Test</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testKafkaSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">BitSailConfiguration</span> configuration <span class="token operator">=</span> <span class="token class-name">JobConfUtils</span><span class="token punctuation">.</span><span class="token function">fromClasspath</span><span class="token punctuation">(</span><span class="token string">&quot;kafka_to_print.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">updateConfiguration</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">EmbeddedFlinkCluster</span><span class="token punctuation">.</span><span class="token function">submitJob</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function D(L,N){const o=t("RouterLink"),s=t("ExternalLinkIcon");return c(),d("div",null,[h,e("p",null,[n("English | "),a(o,{to:"/zh/documents/start/env_setup.html"},{default:u(()=>[n("简体中文")]),_:1})]),m,b,v,e("ul",null,[k,f,e("li",null,[e("a",_,[n("Docker desktop"),a(s)])])]),g,x,y,e("p",null,[n("BitSail uses a shaded module, namely bitsail-shaded-hive, to import hive dependencies. By default, BitSail uses "),w,n(" as hive version. Therefore, if you want to deploy BitSail in different hive environment, you can modify the "),j,n(" property in "),e("a",S,[n("bitsail-shaded-hive"),a(s)]),n(".")]),C,e("p",null,[n("In "),e("a",E,[I,a(s)]),n(" module, we provide the "),e("a",B,[n("Flink11Engine"),a(s)]),n(" class that can be used to start a job in local Flink MiniCluster.")]),e("p",null,[n("For example, we build an integration test "),e("a",T,[n("KafkaSourceITCase"),a(s)]),n(" for Kafka source connector. It uses "),e("a",F,[n("test container"),a(s)]),n(" to start kafka service in local docker. We can run the "),K,n(" method to start a kafka2print task in local flink MiniCluster.")]),q])}const A=r(p,[["render",D],["__file","env_setup.html.vue"]]);export{A as default};
