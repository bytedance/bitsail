import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as i,a as n,b as t,d as e,w as s,e as p,r}from"./app.416da474.js";const c={},d=n("h1",{id:"print-connector-v1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#print-connector-v1","aria-hidden":"true"},"#"),t(" Print Connector V1")],-1),u=p(`<p><em><strong>BitSail</strong></em> The Print write connector prints the data from the upstream, which can be seen in the Stdout of the Flink Task Manager.</p><h2 id="maven-dependency" tabindex="-1"><a class="header-anchor" href="#maven-dependency" aria-hidden="true">#</a> Maven dependency</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bytedance.bitsail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>connector-print<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${revision}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="print-writer" tabindex="-1"><a class="header-anchor" href="#print-writer" aria-hidden="true">#</a> Print Writer</h2><h3 id="supported-data-type" tabindex="-1"><a class="header-anchor" href="#supported-data-type" aria-hidden="true">#</a> Supported data type</h3><p>The Print connector has no restrictions on data types</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3><p>The following mentioned parameters should be added to <code>job.writer</code> block when using, for example:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;writer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.bytedance.bitsail.connector.print.sink.PrintSink&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sample_write&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sample_limit&quot;</span><span class="token operator">:</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="necessary-parameters" tabindex="-1"><a class="header-anchor" href="#necessary-parameters" aria-hidden="true">#</a> Necessary parameters</h4><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">class</td><td style="text-align:left;">yes</td><td style="text-align:left;"></td><td style="text-align:left;">Print writer class name, <code>com.bytedance.bitsail.connector.print.sink.PrintSink</code></td></tr></tbody></table><h4 id="optional-parameters" tabindex="-1"><a class="header-anchor" href="#optional-parameters" aria-hidden="true">#</a> Optional parameters</h4><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;">sample_write</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">Write the sampling result to the log</td><td style="text-align:left;">false</td></tr><tr><td style="text-align:left;">sample_limit</td><td style="text-align:left;">no</td><td style="text-align:left;"></td><td style="text-align:left;">Sampling frequency</td><td style="text-align:left;">5</td></tr></tbody></table><h2 id="related-document" tabindex="-1"><a class="header-anchor" href="#related-document" aria-hidden="true">#</a> Related document</h2>`,14);function h(m,g){const a=r("RouterLink");return o(),i("div",null,[d,n("p",null,[t("Parent document: "),e(a,{to:"/en/documents/connectors/"},{default:s(()=>[t("connectors")]),_:1})]),u,n("p",null,[t("Configuration examples: "),e(a,{to:"/en/documents/connectors/print/v1/print-example-v1.html"},{default:s(()=>[t("print-connector-example")]),_:1})])])}const f=l(c,[["render",h],["__file","print-v1.html.vue"]]);export{f as default};
